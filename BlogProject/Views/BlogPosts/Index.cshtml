@using PagedList.Mvc;
@model PagedList.IPagedList<BlogProject.Models.BlogPost>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Blogs";
}

<section class="global-page-header">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="block">
                    <h2>Blogs</h2>
                </div>
            </div>
        </div>
    </div>
</section>

<section id="blog-full-width">
    <div class="container">
        <div class="col-md-8">
            <table class="table">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <article class="wow fadeInDown" data-wow-delay=".3s" data-wow-duration="500ms">
                                <div class="blog-post-image">
                                    <a href="@Url.Action("Details", "BlogPosts", new { slug = item.slug })"><img class="img-responsive" src="~/images/blog/post-1.jpg" alt="" /></a>
                                </div>
                                <div class="blog-content">
                                    <h2 class="blogpost-title">
                                        <a href="post-fullwidth.html">@Html.DisplayFor(modelItem => item.title)</a>
                                    </h2>
                                    <div class="blog-meta">
                                        <span>@Html.DisplayFor(modelItem => item.created)</span>
                                        <span>by @Html.DisplayFor(modelItem => item.author.displayName)</span>
                                        Catagory: @Html.DisplayFor(modelItem => item.category.categoryName)
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12 abstractOverflow">
                                                    @Html.Raw(item.body)
                                        </div>
                                    </div>
                                    <a class="btn btn-dafault btn-details" href="@Url.Action("Details", "BlogPosts", new { slug = item.slug })">See More</a>
                                </div>
                            </article>
                        </td>
                        <td>
                        </td>
                    </tr>
                }

            </table>
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
        </div>
        <div class="col-md-4">
            <div class="sidebar">
                <div class="search widget">
                    <form action="" method="get" class="searchform" role="search">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Search for...">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button"> <i class="ion-search"></i> </button>
                            </span>
                        </div><!-- /input-group -->
                    </form>
                </div>

                <div class="recent-post widget">
                    @Html.Action("Sidebar", "BlogPosts")
                </div>
                <div class="blog-content">
                    @if (User.IsInRole("Admin"))
                    {
                        <a class="btn btn-dafault btn-details" href="@Url.Action("Create", "BlogPosts")">Create Post</a>
                    }
                </div>
            </div>
        </div>
    </div>
</section>