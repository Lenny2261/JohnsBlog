@using PagedList.Mvc;
@model PagedList.IPagedList<BlogProject.Models.BlogPost>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Blogs";
}

<section class="global-page-header">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="block">
                    <h2>Posts</h2>
                </div>
            </div>
        </div>
    </div>
</section>

<section id="blog-full-width">
    <div class="container">
        <div class="col-md-8">
            <table class="table">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <article class="wow fadeInDown" data-wow-delay=".3s" data-wow-duration="500ms">
                                <div class="blog-post-image">
                                    <a href="@Url.Action("Details", "BlogPosts", new { slug = item.slug })"><img class="img-responsive" src="@item.mediaURL" alt="" /></a>
                                </div>
                                <div class="blog-content">
                                    <h2 class="blogpost-title abstractOverflow">
                                        <a href="@Url.Action("Details", "BlogPosts", new { slug = item.slug })">@Html.DisplayFor(modelItem => item.title)</a>
                                    </h2>
                                    <div class="blog-meta">
                                        <span>@Html.DisplayFor(modelItem => item.created)</span>
                                        <span>by @Html.DisplayFor(modelItem => item.author.displayName)</span>
                                        Category: @Html.DisplayFor(modelItem => item.category.categoryName)
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12 abstractOverflow">
                                                    @Html.DisplayFor(modelItem => item.abstractBody)
                                        </div>
                                    </div>
                                    <a class="btn btn-dafault btn-details" href="@Url.Action("Details", "BlogPosts", new { slug = item.slug })">See More</a>
                                </div>
                            </article>
                        </td>
                        <td>
                        </td>
                    </tr>
                }

            </table>
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter, currentSearch = ViewBag.CurrentSearch }))
        </div>
        <div class="col-md-4">
            <div class="sidebar">
                <div class="widget">
                    @using (Html.BeginForm("Index", "BlogPosts", FormMethod.Get)) { 
                    <div class="input-group">
                        Search Posts @Html.TextBox("searchString", ViewBag.CurrentSearch as string, new { style = "width:225px" })
                        <div class="blog-content text-right">
                                <button class="btn btn-dafault btn-details" type="submit">Search</button>
                        </div>
                    </div><!-- /input-group -->
                    }
                    </div>

                <div class="recent-post widget">
                    @Html.Action("Sidebar", "BlogPosts")
                </div>
                <div class="categories widget">
                    <h3 class="widget-head">Categories</h3>
                    <ul>
                        @foreach (var item in ViewBag.CurrentCategories)
                        {
                            <li>
                                <a href="@Url.Action("Index", new { sortCat = @item.categoryName, currentFilter = ViewBag.CurrentFilter = "" })">@item.categoryName</a>
                            </li>
                        }
                    </ul>
                    <div class="blog-content text-right">
                        <a class="ridOfTop btn btn-dafault btn-details" href="@Url.Action("Index", new { sortCat = ""})">Clear</a>
                    </div>

                </div>
                <div class="blog-content">
                    @if (User.IsInRole("Admin"))
                    {
                        <a class="btn btn-dafault btn-details" href="@Url.Action("Create", "BlogPosts")">Create Post</a>
                    }
                </div>
                <div class="blog-content">
                    @if (User.IsInRole("Admin"))
                    {
                        <a class="btn btn-dafault btn-details" href="@Url.Action("Index", "Categories")">Mess With Categories</a>
                    }
                </div>
                <div class="blog-content">
                    @if (User.IsInRole("Admin"))
                    {
                        <a class="btn btn-dafault btn-details" href="@Url.Action("Unfinished", "BlogPosts")">Unfinished Posts</a>
                    }
                </div>
            </div>
        </div>
    </div>
</section>