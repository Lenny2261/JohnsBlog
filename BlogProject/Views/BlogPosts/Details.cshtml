@model BlogProject.Models.BlogPost

@{
    ViewBag.Title = "Details";
}


<section class="global-page-header">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="block">
                    <h2 class="abstractOverflow">@Html.DisplayFor(model => model.title)</h2>
                    <div class="portfolio-meta">
                        <span>@Html.DisplayFor(model => model.created)</span>|
                        <span> Category: @Html.DisplayFor(model => model.category.categoryName)</span>|
                        <span> By: @Html.DisplayFor(model => model.author.displayName)</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="single-post">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="post-img center-block imageBlog">
                    <img class="img-responsive " alt="" src="@Html.DisplayFor(model => model.mediaURL)">
                </div>
                <div class="post-content blogOverflow">
                    @Html.Raw(Model.body)
                </div>
                <hr />
                @*<div class="media">*@
                @{ var commentsSort = Model.comments.OrderByDescending(c => c.created);}
                    @foreach (var item in commentsSort)
                    {
                <div class="media-body">
                    <h4 class="media-heading">
                        @item.author.displayName
                    </h4>
                    <p class="text-muted">
                        @item.created
                    </p>
                    <p>
                        @item.body
                    </p>
                    @if (User.IsInRole("Admin") || User.IsInRole("Mod"))
                    {
                        <a class="btn btn-dafault btn-details" href="@Url.Action("Edit", "Comments", new { id = item.id })">Edit</a>
                        <a class="btn btn-dafault btn-details" href="@Url.Action("Delete", "Comments", new { id = item.id })">Delete</a>
                    }
                    else
                    {

                    }
                </div>
                        <br />
                    }
                @*</div>*@
                <hr />
                <div class="post-comment" id="testTap">
                    @using (Html.BeginForm("Create","Comments", FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(b => b.id);
                        @Html.Action("Create", "Comments")
                        if (User.Identity.IsAuthenticated)
                        {
                            <div class="form-group">
                                <div class="col-md-12 ridOfLeft">
                                    <div class="blog-content">
                                        <button class="btn btn-dafault btn-details" type="submit">Comment</button>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-12 ridOfLeft">
                                <div class="blog-content">
                                    <a class="btn btn-dafault btn-details" href="@Url.Action("Login", "Account")">Login To Comment</a>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</section>
@if (User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>
}




